package com.example.viikko9pt2;

import android.text.Editable;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import java.io.IOException;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

public class MovieTheater {
    ArrayList<MovieTheaterInformation> movieTheaters = new ArrayList<>();
    ArrayList<String> movieList = new ArrayList<>();
    private String name = "";
    private String id = "";
    private String movieName = "";
    private String movieTime = "";
    public MovieTheater(){
    }

    public void readXML(){
        try {
            System.out.println("###########READXML########");
            DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
            String url = "https://www.finnkino.fi/xml/TheatreAreas/";
            Document doc = builder.parse(url);
            doc.getDocumentElement().normalize();
            System.out.println("root element: " + doc.getDocumentElement().getNodeName());
            NodeList nList = doc.getDocumentElement().getElementsByTagName("TheatreArea");
            if(!movieTheaters.isEmpty()){
                movieTheaters.clear();
            }
            for (int i = 0; i < nList.getLength(); i++) {
                Node node = nList.item(i);
                if(node.getNodeType() == Node.ELEMENT_NODE){
                    Element element = (Element) node;
                    id = element.getElementsByTagName("ID").item(0).getTextContent();
                    name = element.getElementsByTagName("Name").item(0).getTextContent();
                    //movieTheaters.add(new MovieTheater(name, id));
                    if(name.contains(":")) {
                        //movieTheaters.add(new MovieTheaterInformation(name, id));
                        movieTheaters.add(new MovieTheaterInformation(name, id));
                    }
                }
            }
        } catch (IOException | SAXException | ParserConfigurationException e){
            e.printStackTrace();
        } finally {
            System.out.println("#######DONE#######");
        }
    }

    public void readDateXML(String theater, Editable date){
        //Etsi teatterin nimeÃ¤ vastaava id
        String id = "";
        String s1 = "";
        for (int i = 0; i < movieTheaters.size(); i++) {
            if(theater.equals(movieTheaters.get(i).name)){
                id = movieTheaters.get(i).id;
            }
        }
        try {
            DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
            String url = "https://www.finnkino.fi/xml/Schedule/?area=" + id + "&dt=" + date;
            Document doc = builder.parse(url);
            doc.getDocumentElement().normalize();
            System.out.println("root element: " + doc.getDocumentElement().getNodeName());
            NodeList nList = doc.getDocumentElement().getElementsByTagName("Show");
            if(!movieList.isEmpty()){
                movieList.clear();
            }
            for (int i = 0; i < nList.getLength(); i++) {
                Node node = nList.item(i);
                if(node.getNodeType() == Node.ELEMENT_NODE){
                    Element element = (Element) node;
                    //movieID = element.getElementsByTagName("ID").item(0).getTextContent();
                    //System.out.println(movieID);
                    movieName = element.getElementsByTagName("Title").item(0).getTextContent();
                    movieTime = element.getElementsByTagName("dttmShowStart").item(0).getTextContent();
                    String time = movieTime.substring(movieTime.length() - 8, movieTime.length() - 3);
                    s1 = movieName + "    " + time;
                    movieList.add(s1);
                }
            }
            System.out.println(url);
        } catch (IOException | SAXException | ParserConfigurationException e){
            System.out.println("VIRHE");
            e.printStackTrace();
        } finally {
            System.out.println("#######DONE#######");
        }
    }

}
