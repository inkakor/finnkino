package com.example.harjoitustyoolio;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.text.Editable;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RatingBar;
import android.widget.Spinner;
import android.widget.TextView;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;

public class Review extends AppCompatActivity {
    ArrayList<ReviewList > watchedMovies = new ArrayList<>();
    ArrayList<String> movies;
    ArrayList<String> moviesSpinner = new ArrayList<>();
    String[] columns;

    private EditText reviewText;
    private Spinner movieSpinner;

    private RatingBar ratingBar;
    private TextView rateStars;

    private String file = "movieTest.txt";
    private String file2 = "everything.txt";
    Context context = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_review);
        context = Review.this;
        System.out.println("KANSION SIJAINTI " + context.getFilesDir());

        ratingBar = (RatingBar) findViewById(R.id.ratingBar);
        Button rateButton = (Button) findViewById(R.id.reviewB);
        rateStars = (TextView) findViewById(R.id.textView2);
        reviewText = (EditText)findViewById(R.id.writtenReview);
        Button submitButton = (Button) findViewById(R.id.submitB);
        movieSpinner = (Spinner) findViewById(R.id.reviewS);
        final TextView title = (TextView) findViewById(R.id.textView3);

        Bundle bundleObject = getIntent().getExtras();
        movies = (ArrayList<String>) bundleObject.getSerializable("movies");
        watchedMovies = (ArrayList<ReviewList>) bundleObject.getSerializable("watchedmovies");

        if(!movies.isEmpty()){
            saveToFile();
        }

        if(!file.isEmpty()){
            System.out.println("TIEDOSTO EI OLE TYHJÄ");
            readFile();
        }

        //configure();



        // tähän lista jossa katsotut elokuvat ovat
        //spinner that shows a list of watched movies: user chooses one of the movies and rates it with stars/written review
        ArrayAdapter spinnerAdapter = new ArrayAdapter<>(Review.this, android.R.layout.simple_spinner_dropdown_item, moviesSpinner);
        movieSpinner.setAdapter(spinnerAdapter);
        movieSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
            }
            @Override
            public void onNothingSelected(AdapterView<?> adapterView) {
            }
        });

        //rating watched movies with stars from 1 to 5
        rateButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                rateStars.setText("Your rating is: "+ratingBar.getRating());
                //tähän toiminto joka lisää tekstin listaan?
            }
        });


        //written review on the movie
        /*
        submitButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //tähän toiminto joka lisää tekstin listaan painamalla submit buttonia
            }
        });

         */
    }

    //Presents ratings in käyttöliittymä/näyttö??

    public void setRatings(View v){
        String chosenItem = movieSpinner.getSelectedItem().toString();
        String date = "";
        Editable review;
        if(file2.isEmpty()){
            System.out.println("FILE2 TYHJÄ");
        }else{
            System.out.println("FILE2 EI TYHJÄ");
            readWholeFile(chosenItem);
        }
        int index = 0;
        float rate;
        for (int i = 0; i < movies.size(); i++) {
            if(chosenItem.equals(watchedMovies.get(i).mName)){
                System.out.println(watchedMovies.get(i).mName + " " + watchedMovies.get(i).date);
                //date = watchedMovies.get(i).date;
                index = i;
                break;
            }
        }
        if(watchedMovies.get(index).review.equals("")){
            reviewText.setText("Write your review here!");
        }else{
            reviewText.setText(watchedMovies.get(index).review);
        }
        if(watchedMovies.get(index).rate == 0){
            rateStars.setText("Your rating will appear here");
        }else{
            ratingBar.setRating(watchedMovies.get(index).rate);
        }
    }

    //Saves ratings.
    public void saveRatings(View v){
        String date = "";
        Editable review;
        int index = 0;
        float rate;
        String chosenItem = movieSpinner.getSelectedItem().toString();
        for (int i = 0; i < movies.size(); i++) {
            if(chosenItem.equals(watchedMovies.get(i).mName)){
                date = watchedMovies.get(i).date;
                index = i;
            }
        }
        rate = ratingBar.getRating();
        review = reviewText.getText();
        String review1 = String.valueOf(review);
        watchedMovies.set(index, new ReviewList(chosenItem, date, rate, review1));
        //System.out.println(watchedMovies.get(index).mName + watchedMovies.get(index).rate);
        saveAllToFile(chosenItem, date, rate, review1);

        ratingBar.setRating(0);
        reviewText.setText("");
    }

        /*Eli ensin luen movies listasta (tulee MainActivitystä) elokuvat tiedostoon, johon ne tallennetaan. Samalla tarkastan että onko
    elokuva jo tiedostossa, jos on, niin en lisää. Sitten spinneriin päätyy moviesSpinner lista, johon on lisätty tiedostossa olevat elokuvat.

    eli movies -> tiedosto -> moviesSpinner
    */
    
    public void saveToFile(){
        File path = getApplicationContext().getFilesDir();
        //Saves all movies to an archive
        for (int i = 0; i < movies.size(); i++) {
            //String content = watchedMovies.get(i).mName + ";" + watchedMovies.get(i).date + ";" + watchedMovies.get(i).rate + ";" + watchedMovies.get(i).review + "\n";
            String content = movies.get(i) + "\n";
            try {
                FileOutputStream fos = new FileOutputStream(new File(path, file), true);
                System.out.println(content);
                //tarkista tässä että onko content jo tiedostossa
                int x = checkFile(content);
                if(x == 1){
                    System.out.println("Elokuva on jo tallennettu!!!!");
                }else{
                    System.out.println("Elokuvaa ei ole tallennettu!!!!");
                    fos.write(content.getBytes());
                    fos.close();
                }

            } catch (FileNotFoundException e) {
                Log.e("FileNotFound", "File not found");
            } catch (IOException e) {
                Log.e("IOException", "Input mistake");
            }

        }
    }

    public void readFile(){
        try{
            int n = 0;
            InputStream ins = context.openFileInput(file);
            BufferedReader br = new BufferedReader(new InputStreamReader(ins));
            String line;
            while((line = br.readLine()) != null){
                moviesSpinner.add(line);
            }
            ins.close();
        }catch (IOException e){
            Log.e("IOException", "IO exception");
        }
    }

    //Checks, if movie is already in the file
    public int checkFile(String content){
        int n = 0;
        try{
            InputStream ins = context.openFileInput(file);
            BufferedReader br = new BufferedReader(new InputStreamReader(ins));
            String line;
            while((line = br.readLine()) != null){
                if(line.contains(content.trim())){
                    System.out.println(line + " " + content);
                    System.out.println("ELOKUVA ON JO TALLENNETTU");
                    n = 1;
                }
            }
            System.out.println("###### " + n);
            ins.close();
        }catch (IOException e){
            Log.e("IOException", "IO exception");
        }
        return n;
    }

    //Saves watchedMovies to file

    public void saveAllToFile(String chosenItem, String date, float rate, String review){
        File path = getApplicationContext().getFilesDir();
        String content = "";
        //Saves all movies to an archive
        content = chosenItem + ";" + date + ";" + rate + ";" + review + "\n";
        try {
            FileOutputStream fos = new FileOutputStream(new File(path, file2), true);
            System.out.println(content);
            fos.write(content.getBytes());
            fos.close();

        } catch (FileNotFoundException e) {
            Log.e("FileNotFound", "File not found");
        } catch (IOException e) {
            Log.e("IOException", "Input mistake");
        }
    }


    //Reads watchedMovies file

    public void readWholeFile(String content){
        int index = 0;
        for (int i = 0; i < watchedMovies.size(); i++) {
            if(content.equals(watchedMovies.get(i).mName)){
                index = i;
                System.out.println(index);
            }
        }
        try{
            //int n = 0;
            InputStream ins = context.openFileInput(file2);
            BufferedReader br = new BufferedReader(new InputStreamReader(ins));
            String line;
            while((line = br.readLine()) != null){
                columns = line.split(";");
                if(line.contains(content.trim())){
                    watchedMovies.add(index, new ReviewList(columns[0],columns[1],Float.valueOf(columns[2]),columns[3]));
                }
            }
            ins.close();
        }catch (IOException e){
            Log.e("IOException", "IO exception");
        }
    }


}
